library(dplyr)
library(tidyverse)
library(gtsummary)
library(gt)

theme_gtsummary_journal(journal = "jama")
theme_gtsummary_compact()
load("~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/10-output/mldat_unique.Rdata")

mldat[mldat$set=="Barcelona Validation Set",]$set <- "Barcelona Validation"
mldat$setname <- ifelse(mldat$setname == "Barcelona Validation Set", "Barcelona Validation", as.character(mldat$setname))

# Fix factor levels and names
mldat <- mldat %>%
  filter(!set %in% c("Barcelona Set 1", "CC", "CIN", "Pilot") & !is.na(type)) %>%
  filter((set %in% "Barcelona Validation" & type %in% c("Control", "Endometrial cancer") | (set %in% c("Pilot", "FORECEE", "PMB", "KI", "Lynch Cohort")))) %>%
  mutate(type = case_when(type == "Control" ~ "Control",
                          type == "Endometrial cancer" ~ "EC")) %>%
  mutate(controldiag = ifelse(controldiag=="Benign gynaecological condition", "Benign gynecological condition", controldiag)) %>%
  mutate(controldiag = factor(controldiag,
                              levels = c("Normal, no diagnosis",
                                         "Benign gynecological condition",
                                         "Hospital control",
                                         "CAH",
                                         "Unknown",
                                         "N/A"))) %>%
  mutate(grade = factor(grade, levels = c("Grade I", "Grade II", "Grade III", "Unknown", "N/A"))) %>%
  mutate(hist = ifelse(hist == "Other", "Other *", hist)) %>%
  mutate(hist = factor(hist, levels = c("Endometrioid",
                                        "Serous",
                                        "Clear cell",
                                        "Other *",
                                        "Unknown",
                                        "N/A"))) %>%
  mutate(ethnicity = factor(ethnicity, levels = c("White", "Non-white", "Unknown"))) %>%
  mutate(setname = factor(setname, levels = c("FORECEE Validation",
                                              "Barcelona Validation",
                                              "PMB Cohort",
                                              "Lynch Cohort",
                                              "Karolinska Cohort")))


load("~/Dropbox/index-dev/master-dataset/1-output/mdat.Rdata")
mdat <- mdat %>%
  filter(experiment_name == "3C_DISCOVERY" & dataset_name=="3C_training" & type %in% c("Control", "Endometrial")) %>%
  droplevels()
table(mdat$type)

mldat1 <- mldat %>%
  filter(setname == "FORECEE Validation") %>%
  droplevels()


intersect <- intersect(mldat1$id, mdat$ST_number)

mldat <- mldat %>%
  filter(!id %in% intersect) %>%
  droplevels()
# 
# table(mldat[mldat$set == "FORECEE",]$typedetail, mldat[mldat$set == "FORECEE",]$type)
# table(mldat$typedetail, mldat$set)


tbl <- mldat %>%
  dplyr::select(age, menopause, setname, substrate, setting, collection, ethnicity, time_to_diagnosis, controldiag, type, grade, stage, hist) %>%
  droplevels() %>%
  tbl_strata(strata = setname,
             .tbl_fun= 
               ~ .x %>%
               tbl_summary(by = type,
                           type = list(age ~ "continuous",
                                       substrate ~ "categorical",
                                       grade ~ "categorical",
                                       time_to_diagnosis ~ "continuous"),
                           statistic = list(age ~ "{median} ({min} – {max})",
                                            time_to_diagnosis ~ "{median} ({min} – {max})"),
                           missing = "no",
                           label = list(age ~ "Age",
                                        menopause ~ "Menopausal status",
                                        substrate ~ "Substrate",
                                        collection ~ "Collection",
                                        setting ~ "Setting",
                                        ethnicity ~ "Ethnicity",
                                        time_to_diagnosis ~ "Time to event",
                                        grade ~ "Clinical grade (cases)",
                                        stage ~ "Cancer stage (cases)",
                                        controldiag ~ "Control diagnosis (controls)",
                                        hist ~ "Histology (Cases)")) %>%
               modify_header(update = all_stat_cols() ~"**{level}**<br>n = {n}") %>%
               bold_labels() %>%
               modify_footnote(everything() ~ NA))


t1 <- tbl %>%
  as_gt() %>%
  text_transform(locations = cells_body(),
                 fn = function(x){
                   paste0(ifelse(x == "0 (0)", "",
                                 ifelse(x == "0 (NA)", "",
                                        ifelse(x == "NA (NA – NA)", "",
                                               ifelse(x == "NA (Inf – -Inf)", "", 
                                                      ifelse(x == "0.0000 (0.0000-0.0000)", "", 
                                                             ifelse(x == "NA (Inf--Inf)", "", x)))))))}
  ) %>%
  text_transform(locations = cells_body(),
                 fn = function(x){
                   paste0(ifelse(x == "0.0000 (0.0000 – 0.0000)", "", x))}
  ) %>%
  gt::tab_source_note(gt::html("<b>LBC-TP</b> denotes liquid-based cytology (Thinprep), <b>HCP</b> healthcare professional, <b>IQR</b> interquartile range, <b>CAH</b> complex atypical hyperplasia.<br>* other histologies include carcinosarcoma, mucinous, small cell and squamous cancers.")) %>%
  tab_options(
    table.font.size = 10,
    table.font.names = "Guardian Sans"
  ) 

t1 %>%
  gtsave("~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/tables/table1.html")


#### Fixing code in html # replacement code for substrate etc :) 

# Saving html to pdf:

library(pagedown)
pagedown::chrome_print("~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/tables/table1.html", output = "~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/tables/table1.pdf")

## To Include HTML table in rmarkdown, remove html-preserve snippet