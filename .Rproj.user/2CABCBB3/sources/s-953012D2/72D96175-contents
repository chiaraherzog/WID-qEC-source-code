load("~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/10-output/mldat_unique.Rdata")

dat <- mldat %>%
  filter(dnamut_analysis == "Yes" & !is.na(dnamut_analysis) & !is.na(us_thickness) & !is.na(type)) %>%
  droplevels()

AROC_wid <- AROC.bnp(formula.h = sum ~ age, 
                         group = "type",
                         tag.h = "Control",
                         data = dat,
                         standardise = TRUE,
                         p = seq(0, 1, l = 101),
                         ci.level = 0.05, 
                         compute.lpml = TRUE,
                         compute.WAIC = TRUE,
                         compute.DIC = TRUE,
                         pauc = pauccontrol(compute = FALSE),
                         prior = priorcontrol.bnp(L = 10),
                         density = densitycontrol.aroc(compute = FALSE),
                         mcmc = mcmccontrol(nsave = 8000, nburn = 2000, nskip = 1),
                         parallel = "multicore",
                         ncpus = 4)

AROC_us <- AROC.bnp(formula.h = us_thickness ~ age, 
                          group = "type",
                          tag.h = "Control",
                          data = dat,
                          standardise = TRUE,
                          p = seq(0, 1, l = 101),
                          ci.level = 0.05, 
                          compute.lpml = TRUE,
                          compute.WAIC = TRUE,
                          compute.DIC = TRUE,
                          pauc = pauccontrol(compute = FALSE),
                          prior = priorcontrol.bnp(L = 10),
                          density = densitycontrol.aroc(compute = FALSE),
                          mcmc = mcmccontrol(nsave = 8000, nburn = 2000, nskip = 1),
                          parallel = "multicore",
                          ncpus = 4)

dna <- AROC.bnp(formula.h = dnamut_nmut ~ age, 
                    group = "type",
                    tag.h = "Endometrial cancer",
                    data = dat,
                    standardise = TRUE,
                    p = seq(0, 1, l = 101),
                    ci.level = 0.05, 
                    pauc = pauccontrol(compute = FALSE),
                    prior = priorcontrol.bnp(L = 10),
                    density = densitycontrol.aroc(compute = TRUE),
                    mcmc = mcmccontrol(nsave = 8000, nburn = 2000, nskip = 1),
                    parallel = "multicore",
                    ncpus = 4)
# inverting so i can compute

df1 <- data.frame(p = AROC_wid$p,
                  roc = AROC_wid$ROC[,1],
                  set = "WID-qEC",
                  )
df1 <- rbind(df1, 
             c(-0.000001,0, "WID-qEC"))
df2 <- data.frame(p = AROC_us$p,
                  roc = AROC_us$ROC[,1],
                  set = "Ultrasound")
df2 <- rbind(df2, 
             c(-0.000001,0,"Ultrasound"))

df3 <- data.frame(roc = dna$p,
                  p = abs(dna$ROC[,1]),
                  set = "DNAmut")

df = rbind(df1, df2, df3)


anno1 <- paste0("AUC (WID™-qEC) =", round(AROC_wid$AUC[1],2), "\n(95% CI: ", round(AROC_wid$AUC[2], 2), "-", round(AROC_wid$AUC[3], 2))
anno2 <- paste0("AUC (Ultrasound) =", round(AROC_us$AUC[1],2), "\n(95% CI: ", round(AROC_us$AUC[2], 2), "-", round(AROC_us$AUC[3], 2))
anno3 <- paste0("AUC (DNAmut) =", round(AROC_bnp_hcp$AUC[1],2), "\n(95% CI: ", round(AROC_bnp_hcp$AUC[2], 2), "-", round(AROC_bnp_hcp$AUC[3], 2))

anno1
dna$AUC

df %>%
  ggplot() +
  geom_line(aes(x = as.numeric(p), 
                y = as.numeric(roc),
                colour = set),
            size = 0.75) +
  xlab("1-Specificity") +
  ylab("Sensitivity") +
  ylim(0,1) +
  theme_minimal() +
  theme(plot.title = element_text(size=10),
        panel.grid = element_blank(),
        legend.position = "top") +
  scale_colour_manual(values= c("black", cols[c(5,3,5)]),
                      name = "") 

df$set
+
  annotate("label",
           label = anno1,
           x = 0.5, y = 0.75,
           size = 3.5,
           fill = "black",
           colour = "white") +
  annotate("label",
           label = anno2,
           x = 0.5, y = 0.55,
           size = 3.5,
           fill = cols[6],
           colour = "white")+
  annotate("label",
           label = anno3,
           x = 0.5, y = 0.35,
           size = 3.5,
           fill = cols[5],
           colour = "white")


load("~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/10-output/mldat_unique.Rdata")

mldat <- mldat %>%
  filter(!is.na(type) & !set %in% c("Barcelona Set 1", "CC", "CIN")) %>%
  filter((set %in% "Barcelona Validation Set" & type %in% c("Control", "Endometrial cancer") | (set %in% c("Pilot", "FORECEE", "PMB", "KI")))) %>%
  droplevels() %>%
  mutate(type = case_when(type == "Control"  ~ "Control",
                          type == "Endometrial cancer" ~ "EC")) %>%
  mutate(sum = `ZSCAN12\n(cg25060829 [ii])` + `GYPC\n(cg15768103 [ii])` + `GYPC\n(cg15975865 [i])`)

pilot <- mldat %>%
  filter(set == "Pilot") %>% 
  droplevels()

y <- roc(pilot$type, pilot$sum)
cut <- cutoffs <- coords(y, "best", best.method = "youden")

load("~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/10-output/mldat_unique.Rdata")

mldat <- mldat %>%
  filter(set == "KI" & !is.na(time_to_diagnosis)) %>%
  mutate(thresh1 = case_when(sum >= cut$threshold[1] ~ "Endometrial cancer",
                             sum < cut$threshold[1] ~ "Control")) %>%
  mutate(type = factor(type, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(thresh1 = factor(thresh1, levels = c("Endometrial cancer", "Control"))) %>%
  droplevels() # 82 samples - missing time to diagnosis for some, maybe this can be obtained

# ids <- mldat %>%
#   filter(set == "KI" & is.na(time_to_diagnosis)) %>%
#   pull(id)
# 
# write.table(ids, file = "~/Desktop/ids-missing-ttd.csv",
#           quote = FALSE,
#           row.names = FALSE,
#           col.names = FALSE)

# 
# mldat <- mldat %>%
#   mutate(ttd = case_when(time_to_diagnosis < (365/2) ~ "< 6 months",
#                          time_to_diagnosis >= (365/2) ~ ">= 6 months")) %>%
#   mutate(ttd = factor(ttd, levels = c("< 6 months", ">= 6 months")))
# 
# dat <- data.frame(matrix(nrow = 4, ncol = 5))
# colnames(dat) <- c("time", "value", "hi", "lo", "type")
# dat$type <- c(rep("sensitivity", 2), rep("specificity", 2))
# 
# dat$time <- rep(c(1,2), 2)
# 
# for(i in 1:length(levels(mldat$ttd))){
#   level <- levels(mldat$ttd)[i]
#   
#   ind <- mldat$ttd == level
#   tab <- table(mldat[ind,]$thresh1, mldat[ind,]$type)
#   rval <- summary(epi.tests(tab))
#   
#   j <- i+2
#   dat[i, 2] <- rval[3,1]*100
#   dat[i, 3] <- rval[3,2]*100
#   dat[i, 4] <- rval[3,3]*100
#   dat[j, 2] <- rval[4,1]*100
#   dat[j, 3] <- rval[4,2]*100
#   dat[j, 4] <- rval[4,3]*100
#   
# }
# 
# 
# df <- mldat %>%
#   group_by(ttd) %>%
#   dplyr::summarise(n = paste("(", sum(type == "Endometrial cancer"), ")", sep = ""))



p2 <- mldat %>%
  mutate(type = factor(type, levels = c("Control", "Endometrial cancer"))) %>%
  filter(set == "KI" & !is.na(type) & !is.na(time_to_diagnosis)) %>%
  ggplot(aes(x = time_to_diagnosis/354,
             y = log(sum+0.00001),
             colour = type)) +
  geom_point(size = 1) +
  scale_colour_jama() +
  theme(panel.background = element_blank(),
        legend.key = element_blank(),
        legend.position = "top",
        legend.title = element_blank()) +
  xlab("Time to diagnosis (years)") +
  ylab(expression(paste(atop(bold("WID™-qEC"), "log ("~Sigma~" PMR)")))) +
  geom_hline(yintercept = log(0.03),
             linetype = "dotted",
             colour = cols[1]) +
  geom_hline(yintercept = log(0.63),
             linetype = "dotdash",
             colour = cols[1]) +
  annotate("text",
           x = 4,
           y = log(0.03)-0.5,
           label = "Threshold 1",
           size = 3,
           colour = cols[1]) +
  annotate("text",
           x = 4,
           y = log(0.63)-0.5,
           label = "Threshold 2",
           size = 3,
           colour = cols[1])

(p1 + p2) +
  plot_annotation(tag_levels = "A") 