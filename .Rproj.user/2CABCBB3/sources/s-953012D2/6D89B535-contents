#------------------------------------
# Download TCGA EC data
# Primary tumor + solid normal tissue
# Downloading using TCGA biolinks
# Keeping data downloaded locally as big files (68GB)
#------------------------------------

library(TCGAbiolinks)

query <- GDCquery(project = "TCGA-UCEC",
                  data.category = "DNA Methylation",
                  platform = "Illumina Human Methylation 450",
                  sample.type = c("Primary Tumor",
                                  "Solid Tissue Normal"))

query_pheno <- GDCquery_clinic(project = "TCGA-UCEC",
                               type = "clinical")

dat <- query$results[[1]]
ind <- match(dat$cases.submitter_id, query_pheno$submitter_id)

tcga_pheno <- query_pheno[ind,]
save(tcga_pheno, file = "~/Dropbox/index-dev/3C/2-EC/13-tcga/1-output/tcga_pheno.Rdata")

setwd("~/Documents/Work/data.nosync/TCGA_EC/")
GDCdownload(query, method = "client", files.per.chunk = 10) # RIP internet
data <- GDCprepare(query)
save(data, file = "data.Rdata")

library(SummarizedExperiment)
beta <- assays(data)[[1]]
beta <- na.omit(beta)
save(beta, file = "beta.Rdata")

pheno <- colData(data)
pheno <- as.data.frame(pheno)
pheno$type <- case_when(pheno$sample_type=="Solid Tissue Normal" ~ "Control",
                        pheno$sample_type=="Primary Tumor" ~ "EC")
pheno$age <- pheno$age_at_index
save(pheno, file = "~/Dropbox/index-dev/3C/2-EC/13-tcga/1-output/pheno.Rdata")

# Split into training and testing set
pheno$tr_val <- "training"
set.seed(139858320)
ind <- sample(1:484, 0.3*nrow(pheno), replace = FALSE)
pheno[ind,]$tr_val <- "validation"

table(pheno$tr_val, pheno$definition) # split looks ok

ind <- match(rownames(pheno), colnames(beta))
beta <- beta[,ind]

ind <- pheno$tr_val=="training"
beta_tr <- beta[,ind]
ind <- pheno$tr_val == "validation"
beta_val <- beta[,ind]
saveRDS(beta_tr, file = "beta_tr.Rds")
saveRDS(beta_val, file = "beta_val.Rds")


# Estimating IC
library(EpiDISH)
identical(colnames(beta), rownames(pheno))
out.l <- epidish(beta.m = beta, ref.m = centEpiFibIC.m, method = "RPC") 
save(out.l, file='~/Dropbox/index-dev/3C/2-EC/13-tcga/1-output/epidish_output.Rdata')

frac.m <- hepidish(beta.m = beta, ref1.m = centEpiFibIC.m, ref2.m = centBloodSub.m, 
                   h.CT.idx = 3, method = 'RPC', maxit = 500)
save(frac.m, file='~/Dropbox/index-dev/3C/2-EC/13-tcga/1-output/hepidish_output.Rdata')

pheno$ic <- out.l$estF[,3]
hist(pheno$ic)

library(ggplot2)
library(dplyr)

pheno %>%
  ggplot(aes(x = tr_val,
             y = age_at_index)) +
  geom_boxplot() # ages ok

# Minimal pheno
library(tidyverse)

pheno_tr <- pheno %>%
  rownames_to_column("basename") %>%
  filter(tr_val=="training") %>%
  select(basename, type, age, ic) %>%
  column_to_rownames("basename")

pheno_val <- pheno %>%
  rownames_to_column("basename") %>%
  filter(tr_val=="validation") %>%
  select(basename, type, age, ic) %>%
  column_to_rownames("basename")

saveRDS(pheno_tr, file = "~/Dropbox/index-dev/3C/2-EC/13-tcga/1-output/pheno_tr.Rds")
saveRDS(pheno_val, file = "~/Dropbox/index-dev/3C/2-EC/13-tcga/1-output/pheno_val.Rds")
