---
title: "5. Detailed analysis of the Barcelona set"
author: "Chiara Herzog"
date: April 4, 2022
output:
  rmarkdown::html_document:
    theme: cosmo
    code_folding: show
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE,
                      warning = FALSE,
                      message = FALSE)

library(dplyr)
library(tidyverse)
library(ggplot2)
library(ROCnReg)
library(gt)
library(epiR)
cols <- pal_jama(alpha = 0.8)(7)

# Read in data
load("../0-data/WID-qEC_manuscript_data.Rdata")
load("../0-data/cutoff.Rdata")
```

## Comparison of self-sampling versus healthcare professional-assisted collection (AROC) (Figure S13)

```{r fig.align = "center", fig.width = 5, fig.height = 4.5}
dat <- mldat %>%
  filter(set == "Barcelona Validation" & !is.na(type)) %>%
  mutate(type = factor(type, levels = c("Control", "Endometrial cancer")),
         selfsampling = case_when(selfsampling == "Yes" ~ "Self-collected",
                                  selfsampling == "Clinician assisted" ~ "HCP-assisted collection")) %>%
  mutate(selfsampling = factor(selfsampling, levels = c("Self-collected", "HCP-assisted collection"))) %>%
  droplevels()

AROC_bnp_all <- AROC.bnp(formula.h = sum ~ age, 
                     group = "type",
                     tag.h = "Control",
                     data = dat,
                     standardise = TRUE,
                     p = seq(0, 1, l = 101),
                     ci.level = 0.05, 
                     compute.lpml = TRUE,
                     compute.WAIC = TRUE,
                     compute.DIC = TRUE,
                     pauc = pauccontrol(compute = FALSE),
                     prior = priorcontrol.bnp(L = 10),
                     density = densitycontrol.aroc(compute = FALSE),
                     mcmc = mcmccontrol(nsave = 8000, nburn = 2000, nskip = 1),
                     parallel = "multicore",
                     ncpus = 4)

AROC_bnp_self <- AROC.bnp(formula.h = sum ~ age, 
                         group = "type",
                         tag.h = "Control",
                         data = dat[dat$selfsampling=="Self-collected",],
                         standardise = TRUE,
                         p = seq(0, 1, l = 101),
                         ci.level = 0.05, 
                         compute.lpml = TRUE,
                         compute.WAIC = TRUE,
                         compute.DIC = TRUE,
                         pauc = pauccontrol(compute = FALSE),
                         prior = priorcontrol.bnp(L = 10),
                         density = densitycontrol.aroc(compute = FALSE),
                         mcmc = mcmccontrol(nsave = 8000, nburn = 2000, nskip = 1),
                         parallel = "multicore",
                         ncpus = 4)

AROC_bnp_hcp<- AROC.bnp(formula.h = sum ~ age, 
                          group = "type",
                          tag.h = "Control",
                          data = dat[dat$selfsampling=="HCP-assisted collection",],
                          standardise = TRUE,
                          p = seq(0, 1, l = 101),
                          ci.level = 0.05, 
                          compute.lpml = TRUE,
                          compute.WAIC = TRUE,
                          compute.DIC = TRUE,
                          pauc = pauccontrol(compute = FALSE),
                          prior = priorcontrol.bnp(L = 10),
                          density = densitycontrol.aroc(compute = FALSE),
                          mcmc = mcmccontrol(nsave = 8000, nburn = 2000, nskip = 1),
                          parallel = "multicore",
                          ncpus = 4)


df1 <- data.frame(p = AROC_bnp_all$p,
                 lower = AROC_bnp_all$ROC[,1],
                 roc = AROC_bnp_all$ROC[,2],
                 upper = AROC_bnp_all$ROC[,3],
                 set = "all")
df1 <- rbind(df1, 
             c(-0.000001,0,0,0, "all"))
df2 <- data.frame(p = AROC_bnp_self$p,
                  lower = AROC_bnp_self$ROC[,1],
                  roc = AROC_bnp_self$ROC[,2],
                  upper = AROC_bnp_self$ROC[,3],
                  set = "self-collected")
df2 <- rbind(df2, 
             c(-0.000001,0,0,0, "self-collected"))
df3 <- data.frame(p = AROC_bnp_hcp$p,
                  lower = AROC_bnp_hcp$ROC[,1],
                  roc = AROC_bnp_hcp$ROC[,2],
                  upper = AROC_bnp_hcp$ROC[,3], 
                  set = "HCP-assisted")
df3 <- rbind(df3, 
             c(-0.000001,0,0,0, "HCP-assisted"))

df = rbind(df1, df2, df3)
anno1 <- paste0("AUC (all) =", round(AROC_bnp_all$AUC[1],2), "\n(95% CI: ", round(AROC_bnp_all$AUC[2], 2), "-", round(AROC_bnp_all$AUC[3], 2))
anno2 <- paste0("AUC (self) =", round(AROC_bnp_self$AUC[1],2), "\n(95% CI: ", round(AROC_bnp_self$AUC[2], 2), "-", round(AROC_bnp_self$AUC[3], 2))
anno3 <- paste0("AUC (HCP) =", round(AROC_bnp_hcp$AUC[1],2), "\n(95% CI: ", round(AROC_bnp_hcp$AUC[2], 2), "-", round(AROC_bnp_hcp$AUC[3], 2))

df %>%
  mutate(set = factor(set, levels = c("all", "self-collected", "HCP-assisted"))) %>%
  ggplot() +
  geom_line(aes(x = as.numeric(p), 
                y = as.numeric(roc),
                colour = set),
            size = 0.75) +
  xlab("1-Specificity") +
  ylab("Sensitivity") +
  ylim(0,1) +
  theme_minimal() +
  theme(plot.title = element_text(size=10),
        panel.grid = element_blank(),
        legend.position = "top") +
  scale_colour_manual(values= c("black", cols[c(6,5)]),
                      name = "") +
  annotate("label",
           label = anno1,
           x = 0.5, y = 0.75,
           size = 3.5,
           fill = "black",
           colour = "white") +
  annotate("label",
           label = anno2,
           x = 0.5, y = 0.55,
           size = 3.5,
           fill = cols[6],
           colour = "white")+
  annotate("label",
           label = anno3,
           x = 0.5, y = 0.35,
           size = 3.5,
           fill = cols[5],
           colour = "white")
```


## Dependence on MMR status (Table S4)

```{r fig.align = "center"}
mldat_tmp <- mldat %>%
  filter(!is.na(type) & (type == "Endometrial cancer" & mmr != "N/A") | (type == "Control" & mmr == "N/A")) %>%
  droplevels() %>%
  mutate(sum = `ZSCAN12\n(cg25060829 [ii])` + `GYPC\n(cg15768103 [ii])` + `GYPC\n(cg15975865 [i])`) %>%
  mutate(thresh1 = case_when(sum >= cut$threshold[1] ~ "Endometrial cancer",
                             sum < cut$threshold[1] ~ "Control")) %>%
  mutate(thresh2 = case_when(sum >= cut$threshold[2] ~ "Endometrial cancer",
                             sum < cut$threshold[2] ~ "Control")) %>%
  mutate(type = factor(type, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(thresh1 = factor(thresh1, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(thresh2 = factor(thresh2, levels = c("Endometrial cancer", "Control"))) 

dat <- data.frame(matrix(nrow = 3, ncol = 4))
colnames(dat) <- c("threshold", "type", "MMR proficient", "MMR deficient")
dat$threshold <- c("", "Threshold 1", "Threshold 2")
dat$type <- c( "n", rep("Sensitivity – % (95% CI)", 2))


for(i in  2:length(levels(mldat_tmp$mmr))){
  name <- levels(mldat_tmp$mmr)[i]
  tmp <- mldat_tmp %>%
    filter(mmr %in% c(name, "N/A")) %>%
    droplevels()
  set <- unique(tmp$set)
  
  tab <- table(tmp$thresh1, tmp$type)
  rval <- summary(epi.tests(tab))
  
  dat[1,i+1] <- paste0(sum(tmp$type == "Endometrial cancer"), " endometrial cancers")
  dat[2,i+1] <- paste0(round(rval[3,1],2)*100, " (",
                       round(rval[3,2],2)*100, "–",
                       round(rval[3,3],2)*100, ")")
  
  tab <- table(tmp$thresh2, tmp$type)
  rval <- summary(epi.tests(tab))
  
  dat[3,i+1] <- paste0(round(rval[3,1],2)*100, " (",
                       round(rval[3,2],2)*100, "–",
                       round(rval[3,3],2)*100, ")")
}

tbl <- dat %>%
  gt(rowname_col = "type", groupname_col = "threshold") %>%
  text_transform(locations = cells_body(),
                 fn = function(x){
                   gsub("[.]", "·", x)
                 }
  ) %>%
  tab_options(table.font.names = "Guardian Sans",
              column_labels.font.weight = "bold",
              row_group.font.weight = "bold",
              data_row.padding = 2,
              column_labels.font.size = 12,
              table.font.size = 11,
              row_group.padding = 2,
              row_group.border.right.width = px(10),
              summary_row.padding = 2,
              table.width = px(600),
              table.border.top.color = "white",
              row_group.border.top.width = px(1),
              row_group.border.bottom.width = px(1),
              stub.border.width = px(0),
              heading.title.font.size = 14)


tbl
```

## Comparison with DNAmut and ultrasound (Table S5)

```{r}
dat <- mldat %>%
  filter(dnamut_analysis == "Yes" & !is.na(dnamut_analysis) & !is.na(type)) %>%
  mutate(sum_cutoff = case_when(sum >= 0.03 ~ "positive",
                                sum < 0.03 ~ "negative")) %>%
  mutate(sum_cutoff2 = case_when(sum >= 0.63 ~ "positive",
                                 sum < 0.63 ~ "negative")) %>%
  mutate(type = factor(type, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(sum_cutoff = factor(sum_cutoff, levels = c("positive", "negative")),
         sum_cutoff2 = factor(sum_cutoff2, levels = c("positive", "negative")),
         dnamut_result = factor(dnamut_result, levels = c("Positive", "Negative"))) %>% 
  droplevels()

dat1 <- data.frame(matrix(nrow = 8, ncol = 3))
colnames(dat1) <- c("Set", "Type", "Data")
dat1$Type <- c("Controls", "Endometrial cancers", "DNAmut Sensitivity – % (95% CI)", "DNAmut Specificity – % (95% CI)",
               "qWID-EC Threshold I Sensitivity – % (95% CI)", "qWID-EC Threshold I Specificity – % (95% CI)",
               "qWID-EC Threshold II Sensitivity – % (95% CI)", "qWID-EC Threshold II Specificity – % (95% CI)")
dat1$Set <- "DNA mutation analysis *"

dat1[1,3] <- nrow(dat[dat$type=="Control",])
dat1[2,3] <- nrow(dat[dat$type=="Endometrial cancer",])

tmp <- dat %>%
  pivot_longer(c(sum_cutoff, sum_cutoff2, dnamut_result),
               names_to = "analysis",
               values_to = "value") %>%
  mutate(analysis = factor(analysis, levels = c("sum_cutoff", "sum_cutoff2", "dnamut_result")))

for (i in 1:length(levels(tmp$analysis))){
  name <- levels(tmp$analysis)[i]
  tmp2 <- tmp %>%
    filter(analysis == name) %>%
    droplevels()
  
  tab <- table(tmp2$value, tmp2$type)
  rval <- summary(epi.tests(tab))
  
  x <- ifelse(name == "sum_cutoff", 4, ifelse(name == "sum_cutoff2", 5, 0))
  j <- i + x
  
  l <- j + 1
  
  dat1[j, 3] <- paste0(round(rval[3,1],2)*100, " (", round(rval[3,2],2)*100, "-", round(rval[3,3],2)*100, ")")
  dat1[l, 3] <- paste0(round(rval[4,1],2)*100, " (", round(rval[4,2],2)*100, "-", round(rval[4,3],2)*100, ")")
  
}

dat_dnamut <- dat1

# US qualitative
dat <- mldat %>%
  filter(!is.na(us_cat) & !is.na(type)) %>%
  mutate(sum_cutoff = case_when(sum >= 0.03 ~ "positive",
                                sum < 0.03 ~ "negative")) %>%
  mutate(sum_cutoff2 = case_when(sum >= 0.63 ~ "positive",
                                 sum < 0.63 ~ "negative")) %>%
  mutate(type = factor(type, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(sum_cutoff = factor(sum_cutoff, levels = c("positive", "negative")),
         sum_cutoff2 = factor(sum_cutoff2, levels = c("positive", "negative")),
         us_cat = factor(us_cat, levels = c("Abnormal", "Normal"))) %>% 
  droplevels()

dat1 <- data.frame(matrix(nrow = 8, ncol = 3))
colnames(dat1) <- c("Set", "Type", "Data")
dat1$Type <- c("Controls", "Endometrial cancers", "US Sensitivity – % (95% CI)", "US Specificity – % (95% CI)",
               "qWID-EC Threshold I Sensitivity – % (95% CI)", "qWID-EC Threshold I Specificity – % (95% CI)",
               "qWID-EC Threshold II Sensitivity – % (95% CI)", "qWID-EC Threshold II Specificity – % (95% CI)")
dat1$Set <- "Ultrasound"

dat1[1,3] <- nrow(dat[dat$type=="Control",])
dat1[2,3] <- nrow(dat[dat$type=="Endometrial cancer",])

tmp <- dat %>%
  pivot_longer(c(sum_cutoff, sum_cutoff2, us_cat),
               names_to = "analysis",
               values_to = "value") %>%
  mutate(analysis = factor(analysis, levels = c("sum_cutoff", "sum_cutoff2", "us_cat")))

for (i in 1:length(levels(tmp$analysis))){
  name <- levels(tmp$analysis)[i]
  tmp2 <- tmp %>%
    filter(analysis == name) %>%
    droplevels()
  
  tab <- table(tmp2$value, tmp2$type)
  rval <- summary(epi.tests(tab))
  
  x <- ifelse(name == "sum_cutoff", 4, ifelse(name == "sum_cutoff2", 5, 0))
  j <- i + x
  
  l <- j + 1
  
  dat1[j, 3] <- paste0(round(rval[3,1],2)*100, " (", round(rval[3,2],2)*100, "-", round(rval[3,3],2)*100, ")")
  dat1[l, 3] <- paste0(round(rval[4,1],2)*100, " (", round(rval[4,2],2)*100, "-", round(rval[4,3],2)*100, ")")
  
}

dat_uscat <- dat1


dat_dnamut[1,3] <- "76 cancer cases,\n19 cancer-free controls"
dat_dnamut[1,2] <- "n"
dat_dnamut <- dat_dnamut[-2,]
dat_dnamut$type <- c("n", rep(c("Sensitivity – % (95% CI)", "Specificity – % (95%)"), 3))
dat_dnamut$test <- c("",
                     rep("Comparison test", 2),
                     rep("WID™-qEC Threshold 1", 2),
                     rep("WID™-qEC Threshold 2", 2))
dat_dnamut <- dat_dnamut[,-2]
dat_dnamut <- dat_dnamut[,-1]
colnames(dat_dnamut) <- c("DNA mutation analysis *", "type", "test")


dat_uscat[1,3] <- "122 cancer cases,\n98 cancer-free controls"
dat_uscat[1,2] <- "n"
dat_uscat <- dat_uscat[-2,]

dat_uscat$type <- c("n", rep(c("Sensitivity – % (95% CI)", "Specificity – % (95%)"), 3))
dat_uscat$test <- c("",
                     rep("Comparison test", 2),
                     rep("WID™-qEC Threshold 1", 2),
                     rep("WID™-qEC Threshold 2", 2))
dat_uscat <- dat_uscat[,-2]
dat_uscat <- dat_uscat[,-1]
colnames(dat_uscat) <- c("Ultrasound analysis", "type", "test")

dat <- cbind(dat_dnamut, dat_uscat$`Ultrasound analysis`)

colnames(dat) <- c("DNA mutation analysis *",
                   "type",
                   "test", 
                   "Ultrasound analysis")

tbl <- dat %>%
  gt(groupname_col = "test",
     rowname_col = "type") %>%
  tab_options(table.font.names = "Guardian Sans",
              column_labels.font.weight = "bold",
              row_group.font.weight = "bold",
              data_row.padding = 2,
              column_labels.font.size = 12,
              table.font.size = 11,
              row_group.padding = 2,
              row_group.border.right.width = px(10),
              summary_row.padding = 2,
              table.width = px(700),
              table.border.top.color = "white",
              row_group.border.top.width = px(1),
              row_group.border.bottom.width = px(1),
              stub.border.width = px(0),
              heading.title.font.size = 14) %>%
  gt::tab_source_note(source_note = html("* Cutoff >= 1 mutation."))

tbl
```

## Comparison of WID-qEC, DNA mutation analysis, and ultrasound dependent on stage (Table S6)

```{r}
tmp <- mldat %>%
  filter(set == "Barcelona Validation" & !is.na(type) & dnamut_analysis == "Yes" & !is.na(dnamut_analysis) & !is.na(us_cat)) %>%
  mutate(sum_cutoff = case_when(sum >= 0.03 ~ "positive",
                                sum < 0.03 ~ "negative")) %>%
  mutate(sum_cutoff2 = case_when(sum >= 0.63 ~ "positive",
                                 sum < 0.63 ~ "negative")) %>%
  mutate(type = factor(type, levels = c("Endometrial cancer", "Control")),
         sum_cutoff = factor(sum_cutoff, levels = c("positive", "negative")),
         sum_cutoff2 = factor(sum_cutoff2, levels = c("positive", "negative")),
         dnamut_result = factor(dnamut_result, levels = c("Positive", "Negative")),
         us = factor(us_cat, levels = c("Abnormal", "Normal"))) %>%
  droplevels()

tmp2 <- tmp %>%
  pivot_longer(c(sum_cutoff, sum_cutoff2, dnamut_result, us),
               names_to = "analysis",
               values_to = "value") %>%
  mutate(analysis = factor(analysis, levels = c("sum_cutoff", "sum_cutoff2", "us", "dnamut_result")))

tmp_stage1 <- tmp %>%
  filter(stage %in% c("I", "N/A")) %>%
  mutate(sum_cutoff = case_when(sum >= 0.03 ~ "positive",
                                sum < 0.03 ~ "negative"),
         sum_cutoff2 = case_when(sum >= 0.63 ~ "positive",
                                 sum < 0.63 ~ "negative")) %>%
  mutate(type = factor(type, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(sum_cutoff = factor(sum_cutoff, levels = c("positive", "negative")),
         dnamut_result = factor(dnamut_result, levels = c("Positive", "Negative")),
         sum_cutoff2 = factor(sum_cutoff2, levels = c("positive", "negative")),
         us = factor(us_cat, levels = c("Abnormal", "Normal"))) 

tmp2_stage1 <- tmp_stage1 %>%
  pivot_longer(c(sum_cutoff, sum_cutoff2, dnamut_result, us),
               names_to = "analysis",
               values_to = "value") %>%
  mutate(analysis = factor(analysis, levels = c("sum_cutoff", "sum_cutoff2", "us", "dnamut_result")))

dat <- data.frame(matrix(nrow = 4, ncol = 6))
colnames(dat) <- c("WID™-qEC (Threshold 1)",
                   "WID™-qEC (Threshold 2)",
                   "Ultrasound",
                   "DNAmut analysis",
                   "type",
                   "set")
dat$set <- rep(c("all stages (n = 88)", "stage I only (n = 64)"), 2)
dat$type <- c(rep("Sensitivity – % (95% CI)", 2), rep("Specificity – % (95% CI)", 2))

for (i in 1:length(levels(tmp2$analysis))){

  name <- levels(tmp2$analysis)[i]
  tmp_all <- tmp2 %>%
    filter(analysis == name) %>%
    droplevels()
  
  tmp_stage1_calc <- tmp2_stage1  %>%
    filter(analysis == name) %>%
    droplevels()
  
  tab <- table(tmp_all$value, tmp_all$type)
  rval <- summary(epi.tests(tab))
  

  dat[1,i] <- paste0(round(rval[3,1],2)*100, " (", round(rval[3,2],2)*100, "-", round(rval[3,3],2)*100, ")")
  dat[3,i] <- paste0(round(rval[4,1],2)*100, " (", round(rval[4,2],2)*100, "-", round(rval[4,3],2)*100, ")")
  
  tab <- table(tmp_stage1_calc$value, tmp_stage1_calc$type)
  rval <- summary(epi.tests(tab))
  
  dat[2,i] <- paste0(round(rval[3,1],2)*100, " (", round(rval[3,2],2)*100, "-", round(rval[3,3],2)*100, ")")
  dat[4,i] <- paste0(round(rval[4,1],2)*100, " (", round(rval[4,2],2)*100, "-", round(rval[4,3],2)*100, ")")
  
}


tbl <- dat %>%
  gt(rowname_col = "type",
     groupname_col = "set") %>%
  tab_spanner(
    columns = c("WID™-qEC (Threshold 1)", "WID™-qEC (Threshold 2)"),
    label = "WID™-qEC"
  ) %>%
  cols_label(
    "WID™-qEC (Threshold 1)" = "Threshold 1",
    "WID™-qEC (Threshold 2)" = "Threshold 2"
  ) %>%
  text_transform(locations = cells_body(),
                 fn = function(x){
                   gsub("[.]", "·", x)
                 }
  ) %>%
  tab_options(table.font.names = "Guardian Sans",
              column_labels.font.weight = "bold",
              row_group.font.weight = "bold",
              data_row.padding = 2,
              column_labels.font.size = 12,
              table.font.size = 10,
              row_group.padding = 2,
              row_group.border.right.width = px(10),
              summary_row.padding = 2,
              table.border.top.color = "white",
              row_group.border.top.width = px(1),
              row_group.border.bottom.width = px(1),
              stub.border.width = px(0),
              heading.title.font.size = 14,
              table.width = px(600))



tbl
```
