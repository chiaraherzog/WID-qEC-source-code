library(dplyr)
library(tidyverse)
library(gt)
library(gtsummary)
library(pROC)
library(epiR)
library(bdpv)
library(ggsci)

load("~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/10-output/mldat_unique.Rdata")

mldat <- mldat %>%
  filter(!is.na(type) & !set %in% c("Barcelona Set 1", "CC", "CIN")) %>%
  filter((set %in% "Barcelona Validation Set" & type %in% c("Control", "Endometrial cancer") | (set %in% c("Pilot", "FORECEE", "PMB", "KI", "Lynch Cohort")))) %>%
  droplevels() %>%
  mutate(type = case_when(type == "Control"  ~ "Control",
                          type == "Endometrial cancer" ~ "EC")) %>%
  mutate(sum = `ZSCAN12\n(cg25060829 [ii])` + `GYPC\n(cg15768103 [ii])` + `GYPC\n(cg15975865 [i])`)

pilot <- mldat %>%
  filter(set == "Pilot") %>% 
  droplevels()

y <- roc(pilot$type, pilot$sum)
cut <- cutoffs <- coords(y, "best", best.method = "youden")

load("~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/10-output/mldat_unique.Rdata")

mldat <- mldat %>%
  filter(!is.na(type) & set != "Barcelona Set 1") %>%
  filter((set %in% "Barcelona Validation Set" & type %in% c("Control", "Endometrial cancer") | (set %in% c("Pilot", "FORECEE", "PMB", "KI", "Lynch Cohort")))) %>%
  droplevels() %>%
  mutate(sum = `ZSCAN12\n(cg25060829 [ii])` + `GYPC\n(cg15768103 [ii])` + `GYPC\n(cg15975865 [i])`) %>%
  mutate(set = factor(set, levels = c("Pilot",
                                      "FORECEE",
                                      "Barcelona Validation Set",
                                      "PMB", 
                                      "Lynch Cohort",
                                      "KI"))) %>%
  mutate(thresh1 = case_when(sum >= cut$threshold[1] ~ "Endometrial cancer",
                             sum < cut$threshold[1] ~ "Control")) %>%
  mutate(thresh2 = case_when(sum >= cut$threshold[2] ~ "Endometrial cancer",
                             sum < cut$threshold[2] ~ "Control")) %>%
  mutate(type = factor(type, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(thresh1 = factor(thresh1, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(thresh2 = factor(thresh2, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(setname=as.character(setname)) %>%
  mutate(setname = ifelse(setname != "Karolinska Cohort", setname,
                          ifelse(setname == "Karolinska Cohort" & time_to_diagnosis < 365,
                                 "Karolinska Cohort\n(<1 y)",
                                 "Karolinska Cohort\n(>=1 y)")))


mldat$setname


load("~/Dropbox/index-dev/master-dataset/1-output/mdat.Rdata")
mdat <- mdat %>%
  filter(experiment_name == "3C_DISCOVERY" & dataset_name=="3C_training" & type %in% c("Control", "Endometrial")) %>%
  droplevels()
table(mdat$type)

mldat1 <- mldat %>%
  filter(setname == "FORECEE Validation") %>%
  droplevels()


intersect <- intersect(mldat1$id, mdat$ST_number)

mldat <- mldat %>%
  filter(!id %in% intersect & setname != "FORECEE Pilot") %>%
  droplevels()
sum(intersect %in% mldat$id)
mldat$setname
dat <- data.frame(matrix(nrow = 180, ncol = 8))
colnames(dat) <- c("set", "prev", "PPV", "ppv_lo", "ppv_hi", "NPV", "npv_lo", "npv_hi")
dat$set <- rep(unique(mldat$setname), each = 30)
dat$prev <- rep(seq(from = 0.0009, to = 0.15, 0.005), 6)

for(i in  1:nrow(dat)){
  
  tmp <- mldat %>%
    filter(setname == as.character(dat$set[i]))
  pop_prev <- dat$prev[i]
  
  tab <- table(tmp$thresh1, tmp$type)
  rval <- summary(epi.tests(tab))
  tab <- matrix(c(tab[1,1], tab[2,1], tab[1,2], tab[2,2]), ncol = 2)
  colnames(tab) <- c("Case", "Control")
  rownames(tab) <- c("Case", "Control")
  rval2 <- BDtest(xmat=as.matrix(tab), pr=pop_prev, conf.level = 0.95)
  
  dat$PPV[i] <- rval2$PPVNPVDAT$Estimate[2]
  dat$ppv_lo[i] <- rval2$PPVNPVDAT$`Lower 95% limit`[2]
  dat$ppv_hi[i] <- rval2$PPVNPVDAT$`Upper 97.5% limit`[2]
  dat$NPV[i] <- rval2$PPVNPVDAT$Estimate[1]
  dat$npv_lo[i] <- rval2$PPVNPVDAT$`Lower 95% limit`[1]
  dat$npv_hi[i] <- rval2$PPVNPVDAT$`Upper 97.5% limit`[1]
  
}

head(dat)


dat2 <- dat %>%
  pivot_longer(cols = c("PPV", "NPV"),
               names_to = "type",
               values_to = "value") %>%
  pivot_longer(cols = c("ppv_hi", "npv_hi"),
               names_to = "hi_val",
               values_to = "hi") %>%
  pivot_longer(cols = c("ppv_lo", "npv_lo"),
               values_to = "lo",
               names_to = "lo_val") %>%
  filter((type == "PPV" & hi_val == "ppv_hi" & lo_val == "ppv_lo") | (type== "NPV" & hi_val == "npv_hi" & lo_val == "npv_lo")) %>%
  select(set, prev, type, value, hi, lo) %>%
  mutate(true = case_when(set %in% c("FORECEE Validation", "Barcelona Validation Set") ~ 0.09,
                          set == "Lynch Cohort" ~ 3/25,
                          set == "PMB Cohort" ~ 8/74,
                          grepl("Karolinska Cohort", set) ~ 0.0009)) %>%
  mutate(setname = case_when(set == "FORECEE Validation" ~ "FORECEE\nValidation",
                             set == "Karolinska Cohort\n(<1 y)" ~ "Karolinska Cohort\n(<1 y)",
                             set == "Karolinska Cohort\n(>=1 y)" ~ "Karolinska Cohort\n(>=1 y)",
                             set == "Barcelona Validation Set" ~ "Barcelona\nValidation",
                             set == "PMB Cohort" ~ "PMB\nCohort",
                             set == "Lynch Cohort" ~ "Lynch\nCohort")) %>%
  mutate(setname = factor(setname, levels = c("FORECEE\nValidation",
                                              "Barcelona\nValidation",
                                              "PMB\nCohort",
                                              "Lynch\nCohort",
                                              "Karolinska Cohort\n(<1 y)",
                                              "Karolinska Cohort\n(>=1 y)")))

cols <- pal_jama(alpha = 0.8)(7)

scales::show_col(cols)


font <- theme_set(
  theme(text = element_text(family = "Guardian Sans")
  )
)

plot <- dat2 %>%
  ggplot(aes(x = prev,
             y = value)) +
  geom_vline(aes(xintercept = true),
             size = 0.5,
             linetype = "dotted",
             colour = "gray60") +
  geom_ribbon(aes(ymin = lo,
                  ymax = hi,
                  fill = type),
              alpha = 0.2) +
  geom_line(aes(colour = type)) +
  facet_wrap(~setname,
             nrow = 1) +
  theme(legend.position = "top") +
  xlab("Assumed population prevalence") +
  ylab("Predictive Value") +
  scale_colour_manual(values = cols[c(5,6)],
                      name = "",
                      aesthetics = c("fill", "colour")) +
  theme(panel.grid = element_blank(),
        legend.key = element_blank(),
        legend.position = "top",
        legend.title = element_blank(),
        panel.spacing.x = unit(1, "lines"))

ggsave(plot, filename = "~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/figures/s15-ppv-npv-estimates.pdf",
       width = 10,
       height = 3.5,
       device = cairo_pdf)

ggsave(plot, filename = "~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/figures/s15-ppv-npv-estimates.png",
       width = 10,
       height = 3.5)
