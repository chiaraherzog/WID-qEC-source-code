library(dplyr)
library(ggplot2)
library(pROC)
library(gt)

load("~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/10-output/mldat_unique.Rdata")

mldat <- mldat %>%
  filter(!is.na(type) & !set %in% c("Barcelona Set 1", "CC", "CIN")) %>%
  filter((set %in% "Barcelona Validation Set" & type %in% c("Control", "Endometrial cancer") | (set %in% c("Pilot", "FORECEE", "PMB", "KI")))) %>%
  droplevels() %>%
  mutate(type = case_when(type == "Control"  ~ "Control",
                          type == "Endometrial cancer" ~ "EC")) %>%
  mutate(sum = `ZSCAN12\n(cg25060829 [ii])` + `GYPC\n(cg15768103 [ii])` + `GYPC\n(cg15975865 [i])`)

pilot <- mldat %>%
  filter(set == "Pilot") %>% 
  droplevels()

y <- roc(pilot$type, pilot$sum)
cut <- cutoffs <- coords(y, "best", best.method = "youden")


load("~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/10-output/mldat_unique.Rdata")


mldat <- mldat %>%
  filter(set == "FORECEE" & ethnicity != "Unknown") %>%
  mutate(ethnicity = factor(ethnicity, levels = c("White", "Non-white"))) %>%
  droplevels() %>%
  mutate(sum = `ZSCAN12\n(cg25060829 [ii])` + `GYPC\n(cg15768103 [ii])` + `GYPC\n(cg15975865 [i])`) %>%
  mutate(thresh1 = case_when(sum >= cut$threshold[1] ~ "Endometrial cancer",
                             sum < cut$threshold[1] ~ "Control")) %>%
  mutate(thresh2 = case_when(sum >= cut$threshold[2] ~ "Endometrial cancer",
                             sum < cut$threshold[2] ~ "Control")) %>%
  mutate(type = factor(type, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(thresh1 = factor(thresh1, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(thresh2 = factor(thresh2, levels = c("Endometrial cancer", "Control")))


load("~/Dropbox/index-dev/master-dataset/1-output/mdat.Rdata")
mdat <- mdat %>%
  filter(experiment_name == "3C_DISCOVERY" & dataset_name=="3C_training" & type %in% c("Control", "Endometrial")) %>%
  droplevels()
table(mdat$type)

mldat1 <- mldat %>%
  filter(setname == "FORECEE Validation") %>%
  droplevels()
intersect <- intersect(mldat1$id, mdat$ST_number)

mldat <- mldat %>%
  filter(!id %in% intersect) %>%
  droplevels()
sum(intersect %in% mldat$id)

mldat$set



dat <- data.frame(matrix(nrow = 9, ncol = length(unique(mldat$ethnicity))+2))
colnames(dat) <- c(levels(mldat$ethnicity), "threshold", "type")
dat$threshold <- c("", rep("Threshold 1", 4), rep("Threshold 2", 4))
dat$type <- c( "n (controls, cases)", rep(c("Sensitivity – % (95% CI)", "Specificity – % (95% CI)", "PPV – % (95% CI) †", "NPV – % (95% CI) †"), 2))

library(epiR)
library(epitools)
library(bdpv)

for(i in  1:length(levels(mldat$ethnicity))){
  name <- levels(mldat$ethnicity)[i]
  set <- unique(mldat$set)
  tmp <- mldat %>%
    filter(ethnicity == name)
  
  pop_prev <- case_when(set %in% c("Pilot", "FORECEE", "Barcelona Validation Set") ~ 0.09,
                        set == "PMB" ~ 8/63,
                        set == "KI" ~ 0.0009)
  
  tab <- table(tmp$thresh1, tmp$type)
  rval <- summary(epi.tests(tab))
  tab <- matrix(c(tab[1,1], tab[2,1], tab[1,2], tab[2,2]), ncol = 2)
  colnames(tab) <- c("Case", "Control")
  rownames(tab) <- c("Case", "Control")
  rval2 <- BDtest(xmat=as.matrix(tab), pr=pop_prev, conf.level = 0.95)
  
  dat[1,i] <- paste0(sum(tmp$type=="Control"), ", ", 
                     sum(tmp$type == "Endometrial cancer")) 
  dat[2,i] <- paste0(round(rval[3,1],2)*100, " (",
                     round(rval[3,2],2)*100, "–",
                     round(rval[3,3],2)*100, ")")
  dat[3,i] <- paste0(round(rval[4,1],2)*100, " (",
                     round(rval[4,2],2)*100, "–",
                     round(rval[4,3],2)*100, ")")
  dat[4,i] <- paste0(round(rval2$PPVNPVDAT[2,1],2)*100, " (",
                     round(rval2$PPVNPVDAT[2,2],2)*100, "–",
                     round(rval2$PPVNPVDAT[2,4],2)*100, ")")
  dat[5,i] <- paste0(round(rval2$PPVNPVDAT[1,1],2)*100, " (",
                     round(rval2$PPVNPVDAT[1,2],2)*100, "–",
                     round(rval2$PPVNPVDAT[1,4],2)*100, ")")
  
  tab <- table(tmp$thresh2, tmp$type)
  rval <- summary(epi.tests(tab))
  tab <- matrix(c(tab[1,1], tab[2,1], tab[1,2], tab[2,2]), ncol = 2)
  colnames(tab) <- c("Case", "Control")
  rownames(tab) <- c("Case", "Control")
  rval2 <- BDtest(xmat=as.matrix(tab), pr=pop_prev, conf.level = 0.95)
  
  dat[6,i] <- paste0(round(rval[3,1],2)*100, " (",
                     round(rval[3,2],2)*100, "–",
                     round(rval[3,3],2)*100, ")")
  dat[7,i] <- paste0(round(rval[4,1],2)*100, " (",
                     round(rval[4,2],2)*100, "–",
                     round(rval[4,3],2)*100, ")")
  dat[8,i] <- paste0(round(rval2$PPVNPVDAT[2,1],2)*100," (",
                     round(rval2$PPVNPVDAT[2,2],2)*100, "–",
                     round(rval2$PPVNPVDAT[2,4],2)*100, ")")
  dat[9,i] <- paste0(round(rval2$PPVNPVDAT[1,1],2)*100, " (",
                     round(rval2$PPVNPVDAT[1,2],2)*100, "–",
                     round(rval2$PPVNPVDAT[1,4],2)*100, ")")
}

tbl <- dat %>%
  gt(rowname_col = "type", groupname_col = "threshold") %>%
  cols_label(
    White = "White ethnicity",
    `Non-white` = "Non-white ethnicity"
  ) %>%
  tab_options(table.font.names = "Guardian Sans",
              column_labels.font.weight = "bold",
              row_group.font.weight = "bold",
              data_row.padding = 2,
              column_labels.font.size = 12,
              table.font.size = 10,
              row_group.padding = 2,
              row_group.border.right.width = px(10),
              summary_row.padding = 2,
              table.border.top.color = "white",
              row_group.border.top.width = px(1),
              table.width = px(500),
              row_group.border.bottom.width = px(1),
              stub.border.width = px(0),
              heading.title.font.size = 14) %>% 
  gt::tab_source_note(gt::md("**PPV** denotes positive predictive value, **NPV** negative predictive value.<br>† Assumed population prevalence: 9%"))

gtsave(tbl, file = "~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/tables/s3-ethnicity.html")

pagedown::chrome_print("~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/tables/s3-ethnicity.html", output = "~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/tables/s3-ethnicity.pdf")
