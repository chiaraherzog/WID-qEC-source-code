---
title: "2. Main analyses"
author: "Chiara Herzog"
date: April 4, 2022
output:
  rmarkdown::html_document:
    theme: cosmo
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,
                      warning = FALSE,
                      message = FALSE)

library(dplyr)
library(tidyverse)
library(gt)
library(gtsummary)
library(pROC)
library(epiR)
library(bdpv)
library(ggplot2)
library(patchwork)
theme_gtsummary_journal(journal = "jama")
theme_gtsummary_compact()

cols <- pal_jama(alpha = 0.8)(7)

font <- theme_set(
  theme(text = element_text(family = "Guardian Sans")
  )
)

# Read in data
load("../0-data/WID-qEC_manuscript_data.Rdata")
load("../0-data/cutoff.Rdata")

# Read in code
source("1-source-codes/plot_3_rocs.R")

```


# Main tables {.tabset .tabset-fade}

## Table 1. Cohort descriptions.

* For manuscript, "N/A" rows were removed due to redundancy.


```{r fig.align = "center"}
dat <- mldat %>%
  filter(set != "FORECEE Pilot") %>%
  mutate(type = case_when(type == "Control" ~ "Control",
                          type == "Endometrial cancer" ~ "EC")) %>%
  droplevels()

tbl <- dat %>%
  dplyr::select(age, menopause, set, substrate, setting, collection, ethnicity, time_to_diagnosis, controldiag, type, grade, stage, hist) %>%
  droplevels() %>%
  tbl_strata(strata = set,
             .tbl_fun= 
               ~ .x %>%
               tbl_summary(by = type,
                           type = list(age ~ "continuous",
                                       substrate ~ "categorical",
                                       grade ~ "categorical",
                                       time_to_diagnosis ~ "continuous"),
                           statistic = list(age ~ "{median} ({min} – {max})",
                                            time_to_diagnosis ~ "{median} ({min} – {max})"),
                           missing = "no",
                           label = list(age ~ "Age",
                                        menopause ~ "Menopausal status",
                                        substrate ~ "Substrate",
                                        collection ~ "Collection",
                                        setting ~ "Setting",
                                        ethnicity ~ "Ethnicity",
                                        time_to_diagnosis ~ "Time to event",
                                        grade ~ "Clinical grade (cases)",
                                        stage ~ "Cancer stage (cases)",
                                        controldiag ~ "Control diagnosis (controls)",
                                        hist ~ "Histology (Cases)")) %>%
               modify_header(update = all_stat_cols() ~"**{level}**<br>n = {n}") %>%
               bold_labels() %>%
               modify_footnote(everything() ~ NA))


t1 <- tbl %>%
  as_gt() %>%
  text_transform(locations = cells_body(),
                 fn = function(x){
                   paste0(ifelse(x == "0 (0)", "",
                                 ifelse(x == "0 (NA)", "",
                                        ifelse(x == "NA (NA – NA)", "",
                                               ifelse(x == "NA (Inf – -Inf)", "", 
                                                      ifelse(x == "0.0000 (0.0000-0.0000)", "", 
                                                             ifelse(x == "NA (Inf--Inf)", "", x)))))))}
  ) %>%
  text_transform(locations = cells_body(),
                 fn = function(x){
                   paste0(ifelse(x == "0.0000 (0.0000 – 0.0000)", "", x))}
  ) %>%
  gt::tab_source_note(gt::html("<b>LBC-TP</b> denotes liquid-based cytology (Thinprep), <b>HCP</b> healthcare professional, <b>IQR</b> interquartile range, <b>CAH</b> complex atypical hyperplasia.<br>* other histologies include carcinosarcoma, mucinous, small cell and squamous cancers.")) %>%
  tab_options(
    table.font.size = 10,
    table.font.names = "Guardian Sans"
  ) 


t1
```


## Table 2. Sensitivity, specificity, and PPV/NPVs.

```{r fig.align = "center", fig.width = 9, fig.height = 8}
# Prep cutoff data
mldat_tmp <- mldat %>%
  mutate(set = factor(set, levels = c("FORECEE Validation",
                                      "Barcelona Validation",
                                      "PMB Cohort", 
                                      "Lynch Cohort",
                                      "Karolinska Cohort"))) %>%
  mutate(thresh1 = case_when(sum >= cut$threshold[1] ~ "Endometrial cancer",
                             sum < cut$threshold[1] ~ "Control")) %>%
  mutate(thresh2 = case_when(sum >= cut$threshold[2] ~ "Endometrial cancer",
                             sum < cut$threshold[2] ~ "Control")) %>%
  mutate(type = factor(type, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(thresh1 = factor(thresh1, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(thresh2 = factor(thresh2, levels = c("Endometrial cancer", "Control")))



# Create df
dat <- data.frame(matrix(nrow = 10, ncol = length(unique(mldat_tmp$set))+1))
colnames(dat) <- c(levels(mldat_tmp$set), "threshold", "type")
dat$threshold <- c("", "", rep("Threshold 1", 4), rep("Threshold 2", 4))
dat$type <- c( "endometrial cancers", "cancer-free controls", rep(c("Sensitivity – % (95% CI)", "Specificity – % (95% CI)", "PPV – % (95% CI) †", "NPV – % (95% CI) †"), 2))

for(i in  1:length(levels(mldat_tmp$set))){
  name <- levels(mldat_tmp$set)[i]
  tmp <- mldat_tmp %>%
    filter(set == name)
  
  pop_prev <- case_when(name %in% c("FORECEE Validation",
                                    "Barcelona Validation") ~ 0.09,
                        name == "Lynch Cohort" ~ 3/25,
                        name == "PMB Cohort" ~ 8/74,
                        name == "Karolinska Cohort" ~ 0.0009)
  
  tab <- table(tmp$thresh1, tmp$type)
  rval <- summary(epi.tests(tab))
  tab <- matrix(c(tab[1,1], tab[2,1], tab[1,2], tab[2,2]), ncol = 2)
  colnames(tab) <- c("Case", "Control")
  rownames(tab) <- c("Case", "Control")
  rval2 <- BDtest(xmat=as.matrix(tab), pr=pop_prev, conf.level = 0.95)
  
  dat[1,i] <- as.character(sum(tmp$type=="Endometrial cancer"))
  dat[2,i] <- as.character(sum(tmp$type=="Control"))
  dat[3,i] <- paste0(round(rval[3,1],2)*100, " (",
                     round(rval[3,2],2)*100, "–",
                     round(rval[3,3],2)*100, ")")
  dat[4,i] <- paste0(round(rval[4,1],2)*100, " (",
                     round(rval[4,2],2)*100, "–",
                     round(rval[4,3],2)*100, ")")
  dat[5,i] <- paste0(round(rval2$PPVNPVDAT[2,1],2)*100, " (",
                     round(rval2$PPVNPVDAT[2,2],2)*100, "–",
                     round(rval2$PPVNPVDAT[2,4],2)*100, ")")
  dat[6,i] <- paste0(round(rval2$PPVNPVDAT[1,1],2)*100, " (",
                     round(rval2$PPVNPVDAT[1,2],2)*100, "–",
                     round(rval2$PPVNPVDAT[1,4],2)*100, ")")
  
  tab <- table(tmp$thresh2, tmp$type)
  rval <- summary(epi.tests(tab))
  tab <- matrix(c(tab[1,1], tab[2,1], tab[1,2], tab[2,2]), ncol = 2)
  colnames(tab) <- c("Case", "Control")
  rownames(tab) <- c("Case", "Control")
  rval2 <- BDtest(xmat=as.matrix(tab), pr=pop_prev, conf.level = 0.95)
  
  dat[7,i] <- paste0(round(rval[3,1],2)*100, " (",
                     round(rval[3,2],2)*100, "–",
                     round(rval[3,3],2)*100, ")")
  dat[8,i] <- paste0(round(rval[4,1],2)*100, " (",
                     round(rval[4,2],2)*100, "–",
                     round(rval[4,3],2)*100, ")")
  dat[9,i] <- paste0(round(rval2$PPVNPVDAT[2,1],2)*100," (",
                     round(rval2$PPVNPVDAT[2,2],2)*100, "–",
                     round(rval2$PPVNPVDAT[2,4],2)*100, ")")
  dat[10,i] <- paste0(round(rval2$PPVNPVDAT[1,1],2)*100, " (",
                     round(rval2$PPVNPVDAT[1,2],2)*100, "–",
                     round(rval2$PPVNPVDAT[1,4],2)*100, ")")
}

tbl <- dat %>%
  gt(rowname_col = "type", groupname_col = "threshold") %>%
  cols_label(
    "FORECEE Validation" = html("FORECEE<br>Validation"),
    "Barcelona Validation" = html("Barcelona<br>Validation"),
    "PMB Cohort" = html("PMB<br>Cohort"),
    "Lynch Cohort" = html("Lynch<br>Cohort"),
    "Karolinska Cohort" = html("Karolinska<br>Cohort")
  ) %>%
  tab_options(table.font.names = "Guardian Sans",
              column_labels.font.weight = "bold",
              row_group.font.weight = "bold",
              data_row.padding = 2,
              column_labels.font.size = 12,
              table.font.size = 10,
              row_group.padding = 2,
              row_group.border.right.width = px(10),
              summary_row.padding = 2,
              table.border.top.color = "white",
              row_group.border.top.width = px(1),
              row_group.border.bottom.width = px(1),
              stub.border.width = px(0),
              heading.title.font.size = 14) %>% 
  tab_spanner(label = "Diagnostic",
              columns = c("FORECEE Validation", "Barcelona Validation", "PMB Cohort")) %>%
  tab_spanner(label = "Predictive",
              columns = c("Lynch Cohort", "Karolinska Cohort")) %>%
  gt::tab_source_note(gt::md("**PPV** denotes positive predictive value, **NPV** negative predictive value.<br>† Assumed population prevalences: consecutively included women (PMB cohort): 10.8%; symptomatic datasets (FORECEE, Barcelona Validation Set): 9%; asymptomatic/screening set (Karolinska Cohort): <0.1%. Lynch cohort: 12%."))

tbl
```


## Table 3. Menopausal status and histology.

```{r}
# Prep data
tmp <- mldat %>%
  filter(set %in% c("Barcelona Validation", "FORECEE Validation") & menopause %in% c("Pre", "Post")) %>%
  mutate(set = factor(set, levels = c("FORECEE Validation", "Barcelona Validation"))) %>%
  mutate(sum_cutoff = case_when(sum >= 0.03 ~ "positive",
                                sum < 0.03 ~ "negative")) %>%
  mutate(sum_cutoff2 = case_when(sum >= 0.63 ~ "positive",
                                 sum < 0.63 ~ "negative")) %>%
  mutate(type = factor(type, levels = c("Endometrial cancer", "Control")),
         sum_cutoff = factor(sum_cutoff, levels = c("positive", "negative")),
         sum_cutoff2 = factor(sum_cutoff2, levels = c("positive", "negative"))) %>%
  droplevels()

# Prep df
dat <- data.frame(matrix(nrow = 8, ncol = 4))
colnames(dat) <- c("threshold", "type",
                   "Pre-menopause", "Post-menopause")
dat$threshold <- rep(c("Threshold 1", "Threshold 2"), each = 4)
dat$type <- rep(c("Cancer cases, n",
                  "Controls, n",
                  "Sensitivity – % (95% CI)",
                  "Specificity – % (95% CI)"),
                2)

for (i in 1:length(levels(tmp$menopause))){

    meno <- levels(tmp$menopause)[i]
    tmp2 <- tmp %>%
      filter(menopause == meno) %>%
      droplevels()
    
    # Threshold 1
    tab <- table(tmp2$sum_cutoff, tmp2$type)
    rval <- summary(epi.tests(tab))
    
    dat[1,i+2] <- nrow(tmp2[tmp2$type=="Endometrial cancer",])
    dat[2,i+2] <- nrow(tmp2[tmp2$type=="Control",])
    dat[3,i+2] <- paste0(round(rval[3,1],2)*100, " (", round(rval[3,2],2)*100, "-", round(rval[3,3],2)*100, ")")
    dat[4,i+2] <- paste0(round(rval[4,1],2)*100, " (", round(rval[4,2],2)*100, "-", round(rval[4,3],2)*100, ")")
    
    # Threshold 2
    tab <- table(tmp2$sum_cutoff2, tmp2$type)
    rval <- summary(epi.tests(tab))
    
    dat[5,i+2] <- nrow(tmp2[tmp2$type=="Endometrial cancer",])
    dat[6,i+2] <- nrow(tmp2[tmp2$type=="Control",])
    dat[7,i+2] <- paste0(round(rval[3,1],2)*100, " (", round(rval[3,2],2)*100, "-", round(rval[3,3],2)*100, ")")
    dat[8,i+2] <- paste0(round(rval[4,1],2)*100, " (", round(rval[4,2],2)*100, "-", round(rval[4,3],2)*100, ")")
    
}

dat_m <- dat


# Do same for histology
tmp <- mldat %>%
  filter(!is.na(type) & set %in% c("Barcelona Validation", "FORECEE Validation")) %>%
  mutate(set = factor(set, levels = c("FORECEE Validation", "Barcelona Validation"))) %>%
  droplevels() %>%
  mutate(thresh1 = case_when(sum >= cut$threshold[1] ~ "Endometrial cancer",
                             sum < cut$threshold[1] ~ "Control")) %>%
  mutate(thresh2 = case_when(sum >= cut$threshold[2] ~ "Endometrial cancer",
                             sum < cut$threshold[2] ~ "Control")) %>%
  mutate(type = factor(type, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(thresh1 = factor(thresh1, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(thresh2 = factor(thresh2, levels = c("Endometrial cancer", "Control"))) %>%
  filter(hist %in% c("N/A", "Serous", "Endometrioid")) %>%
  mutate(hist = factor(hist, levels = c("N/A", "Endometrioid", "Serous")))

# Prep df
dat <- data.frame(matrix(nrow = 8, ncol = 4))
colnames(dat) <- c("threshold", "type",
                   "Endometrioid", "Serous")
dat$threshold <- rep(c("Threshold 1", "Threshold 2"), each = 4)
dat$type <- rep(c("Cancer cases, n",
                  "Controls, n",
                  "Sensitivity – % (95% CI)",
                  "Specificity – % (95% CI)"),
                2)

for (i in 2:length(levels(tmp$hist))){
  
    tmp2 <- tmp %>%
      filter(hist %in% c("N/A", levels(tmp$hist)[i])) %>%
      droplevels()
    
    # Threshold 1
    tab <- table(tmp2$thresh1, tmp2$type)
    rval <- summary(epi.tests(tab))
    
    dat[1,i+1] <- nrow(tmp2[tmp2$type=="Endometrial cancer",])
    dat[2,i+1] <- nrow(tmp2[tmp2$type=="Control",])
    dat[3,i+1] <- paste0(round(rval[3,1],2)*100, " (", round(rval[3,2],2)*100, "-", round(rval[3,3],2)*100, ")")
    dat[4,i+1] <- paste0(round(rval[4,1],2)*100, " (", round(rval[4,2],2)*100, "-", round(rval[4,3],2)*100, ")")
    
    # Threshold 2
    tab <- table(tmp2$thresh2, tmp2$type)
    rval <- summary(epi.tests(tab))
    
    dat[5,i+1] <- nrow(tmp2[tmp2$type=="Endometrial cancer",])
    dat[6,i+1] <- nrow(tmp2[tmp2$type=="Control",])
    dat[7,i+1] <- paste0(round(rval[3,1],2)*100, " (", round(rval[3,2],2)*100, "-", round(rval[3,3],2)*100, ")")
    dat[8,i+1] <- paste0(round(rval[4,1],2)*100, " (", round(rval[4,2],2)*100, "-", round(rval[4,3],2)*100, ")")
}

dat_h <- dat

dat <- left_join(dat_m, dat_h)

tbl <- dat %>%
  gt(rowname_col = "type", groupname_col = "threshold") %>%
  tab_spanner(label = "Menopausal status",
              columns = c("Pre-menopause",
                          "Post-menopause")) %>%
  tab_spanner(label = "Histology",
              columns = c("Endometrioid",
                          "Serous")) %>%
  text_transform(locations = cells_body(),
                 fn = function(x){
                   gsub(", ", html(",<br>"), x)
                 }
  ) %>%
  tab_options(table.font.names = "Guardian Sans",
              column_labels.font.weight = "bold",
              row_group.font.weight = "bold",
              data_row.padding = 2,
              column_labels.font.size = 12,
              table.font.size = 10,
              row_group.padding = 2,
              row_group.border.right.width = px(10),
              summary_row.padding = 2,
              table.border.top.color = "white",
              row_group.border.top.width = px(1),
              row_group.border.bottom.width = px(1),
              stub.border.width = px(0),
              heading.title.font.size = 14)

tbl
```


## Figure 2.

```{r}
mldat_mut_us <- mldat %>%
  filter(dnamut_analysis == "Yes" & !is.na(dnamut_analysis) & !is.na(us_thickness) & !is.na(type)) %>%
  droplevels()

p1 <- plot_3_rocs(mldat_mut_us$type,
                  mldat_mut_us$sum, mldat_mut_us$us_thickness, mldat_mut_us$dnamut_nmut,
                  "black", cols[7], cols[6],
                  "WID™-qEC", "US", "DNAmut")

tmp <- mldat %>%
  filter(set == "Karolinska Cohort" & !is.na(time_to_diagnosis)) %>%
  mutate(thresh1 = case_when(sum >= cut$threshold[1] ~ "Endometrial cancer",
                             sum < cut$threshold[1] ~ "Control")) %>%
  mutate(type = factor(type, levels = c("Endometrial cancer", "Control"))) %>%
  mutate(thresh1 = factor(thresh1, levels = c("Endometrial cancer", "Control"))) %>%
  droplevels() 

p2 <- tmp %>%
  mutate(type = factor(type, levels = c("Control", "Endometrial cancer"))) %>%
  ggplot(aes(x = time_to_diagnosis/365,
             y = log(sum+0.00001),
             colour = type)) +
  geom_point(size = 1) +
  scale_colour_jama() +
  theme(panel.background = element_blank(),
        legend.key = element_blank(),
        legend.position = "top",
        legend.title = element_blank()) +
  xlab("Time to diagnosis (years)") +
  ylab(expression(paste(atop(bold("WID™-qEC"), "log ("~Sigma~" PMR)")))) +
  geom_hline(yintercept = log(0.03),
             linetype = "dotted",
             colour = cols[1]) +
  geom_hline(yintercept = log(0.63),
             linetype = "dotdash",
             colour = cols[1]) +
  annotate("text",
           x = 4,
           y = log(0.03)-0.5,
           label = "Threshold 1",
           size = 3,
           colour = cols[1]) +
  annotate("text",
           x = 4,
           y = log(0.63)-0.5,
           label = "Threshold 2",
           size = 3,
           colour = cols[1])

(p1 + p2) +
  plot_annotation(tag_levels = "A") 
```