#----------------------------------------------
# Preparing data for linked CpG manuscript plots
#----------------------------------------------

library(IlluminaHumanMethylationEPICanno.ilm10b2.hg19)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(GenomicRanges)
library(patchwork)

#----------------------------------------------
# get anno
#----------------------------------------------

data <- getAnnotation(IlluminaHumanMethylationEPICanno.ilm10b2.hg19)
colour.pal.d8 <- c("#EA7580","#F2949A","#F6B3A1","#D8C99E","#3AB9AC","#109DB7","#0C6EA5","#172869")

#----------------------------------------------
# load data
#----------------------------------------------
load("~/Dropbox/data/3c/beta_merged.Rdata")
load("~/Dropbox/index-dev/master-dataset/1-output/mdat.Rdata")

pheno <- mdat %>%
  filter(experiment_name == "3C_DISCOVERY" & type %in% c("Control", "Endometrial") & dataset_name == "3C_training") %>%
  droplevels()

beta <- beta_merged[,match(rownames(pheno), colnames(beta_merged))]

#----------------------------------------------
# 3 CpGs
#----------------------------------------------

# load CpGs
index <- c("cg25060829", "cg15768103", "cg15975865")

ind <- match(index, rownames(beta))
b <- beta[ind,]

# names
names <- rownames(b)
genenames <- data[match(names, rownames(data)),]$UCSC_RefGene_Name

for (i in 1:length(genenames)){
  genenames[i] <- strsplit(genenames[i], ";")[[1]][1]
}

for (i in 1:length(names)){
  names[i] <- ifelse(is.na(genenames[i]), paste(names[i], "\n", sep = ""), paste(names[i], "\n(", genenames[i], ")", sep = ""))
}

# beta v ic plots
c <- b
rownames(c) <- names

pheno1 <- cbind(pheno, t(c))
pheno1 <- pheno1 %>%
  pivot_longer(rownames(c), values_to = "beta", names_to = "cpg")

# Linked CpG plots
linked <- vector(mode = "list", length = nrow(b))
range <- 500
data_gr <- makeGRangesFromDataFrame(data, start.field = "pos", end.field = "pos", seqnames.field = "chr")

# sort CpGs and find surrounding CpGs
for (i in 1:nrow(b)){
  tmp <- data_gr[match(rownames(b)[i], names(data_gr)),]
  tmp2 <- resize(tmp, width = width(tmp)+(range*2), fix = "center")
  tmp3 <- findOverlaps(tmp2, data_gr, ignore.strand = TRUE, type = "any")
  tmp4 <- data_gr[subjectHits(tmp3),]
  tmp4 <- sort(tmp4)
  tmp5 <- as.data.frame(tmp4)
  linked[[i]] <- tmp5 %>%
    mutate(pos = start - start(tmp))
}

for (i in 1:length(linked)){
  x <- rownames(linked[[i]])[which(linked[[i]]$pos == 0)]
  tmp <- strsplit(data[match(x, rownames(data)),]$UCSC_RefGene_Name, ";")[[1]][1]
  linked[[i]]$cpg <- ifelse(is.na(tmp), paste(x, "\n", sep = ""), paste(x, "\n(", tmp, ")", sep = ""))
  
  intersect <- intersect(rownames(linked[[i]]), rownames(beta))
  linked[[i]] <- linked[[i]][match(intersect, rownames(linked[[i]])),]
  linked[[i]]$mean_neg <- numeric(nrow(linked[[i]]))
  linked[[i]]$mean_pos <- numeric(nrow(linked[[i]]))
  
  for (j in 1:nrow(linked[[i]])){
    ind <- match(rownames(linked[[i]][j,]), rownames(beta))
    linked[[i]][j,]$mean_neg <- apply(beta[ind, pheno$type == "Control"], 1, mean)
    linked[[i]][j,]$mean_pos <- apply(beta[ind, pheno$type != "Control"], 1, mean)
  }
  
  linked[[i]] <- linked[[i]] %>%
    pivot_longer(c(mean_neg, mean_pos), names_to = "type", values_to = "mean")
}

save(pheno1, linked, file = "~/Dropbox/index-dev/3C/2-EC/10-PCR-panel/5-manuscript/2-output/data.Rdata")

# print

pdf(file = "~/Desktop/test.pdf",
    width = 6,
    height = 3)

for (i in 1:length(unique(pheno1$cpg))){
  cpg <- unique(pheno1$cpg)[i]
  
  p1 <- pheno1 %>%
    filter(cpg == unique(pheno1$cpg)[i]) %>%
    droplevels() %>%
    ggplot(aes(x = ic,
               y = beta,
               colour = type)) +
    geom_point(size = 0.5) +
    geom_smooth(method = "lm") +
    theme_gray() +
    theme(legend.position = "none") +
    scale_colour_manual(values = colour.pal.d8[c(6, 2)],
                        name = "") +
    facet_wrap(~cpg,
               nrow = nrow(c),
               scales='free') +
    scale_x_continuous(limits=c(0,1)) +
    scale_y_continuous(limits=c(0,1))
  
  z <- character(length(linked))
  for (i in 1:length(linked)){
    z[i] <- unique(linked[[i]]$cpg)
  }
  
  z <- character(length(linked))
  for (i in 1:length(linked)){
    z[i] <- unique(linked[[i]]$cpg)
  }
  
  ind <- na.omit(match(cpg, z))
  
  y <- linked[[ind]]
  p2 <- y %>%
    ggplot(aes(x = pos,
               y = mean,
               group = type,
               colour = type)) +
    geom_point(size = 0.5) +
    geom_line() +
    xlim(-range, range) +
    ylim(0, 1) +
    theme(legend.position = "none") +
    scale_colour_manual(values = colour.pal.d8[c(6, 2)],
                        name = "") +
    ylab("beta") +
    facet_wrap(~cpg) +
    xlab("")
  
  print(p1 + p2)
}
dev.off()
